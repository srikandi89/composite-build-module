apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.testing.mymoduletestcore'
            artifactId 'mymoduletestcore'
            version '0.17'
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/mymoduletestcore-release.aar")
        }
    }
    repositories {
        maven {
            url myMavenRepoWriteUrl
        }
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url myMavenRepoReadUrl
        }

    }
}

task copyJarModuleTest1(type: Copy) {
    from('../mymoduletest1/build/intermediates/full_jar/release/createFullJarRelease/')
    into('libs/')
    include('full.jar')
    rename('full.jar', 'mymoduletest1-renamed.jar')
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // todo : change 'implementation' to 'api' if failed to transitive-dependencies
    api project(':mymoduletest1')

}
